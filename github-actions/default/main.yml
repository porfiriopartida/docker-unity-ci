name: UnityCI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: ppartida/unity-ci:v2019.4.24f1-01
    steps:
      # Checkout
      - uses: actions/checkout@v2
      
      # Activate the license inside your .github project
      # Replace this with your own license handling
      - name: License activation
        run: /opt/unity/Editor/Unity -quit -batchmode -nographics -force-free -manualLicenseFile .github/Unity_v2019.x.ulf || exit 0
      
      # Run Tests
      - name: EditMode - Unit Testing
        run: /opt/unity/Editor/Unity -runTests -nographics -batchmode -projectPath . -testResults "/tmp/TestResults" -testPlatform EditMode || exit 0
      
      # Print TestResults.xml
      - name: List test results (most likely run a script that parses this
        run: cat "/tmp/TestResults.xml"

      # Parse TestResults to JSON/HTML
      - name: EditMode - Unit Testing
        run: /opt/unity/Editor/Unity -runTests -nographics -batchmode -projectPath . -testResults "/tmp/TestResults" -testPlatform EditMode || exit 0
      
      - name: Create Default UnityLog file
        run: touch /tmp/TestResults/UnityLog.txt
      
      - name: Parse Test Results
        run: cd /opt/unity/UnityTestRunnerResultsReporter/ && dotnet /opt/unity/UnityTestRunnerResultsReporter/UnityTestRunnerResultsReporter.dll --resultsPath=/tmp/TestResults

      - uses: actions/upload-artifact@v2
        with:
          name: Upload test results
          path: |
            /tmp/TestResults
            !/tmp/TestResults